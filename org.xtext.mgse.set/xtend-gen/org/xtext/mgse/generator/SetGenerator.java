/**
 * generated by Xtext 2.11.0
 */
package org.xtext.mgse.generator;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.xtext.mgse.set.FORMS;
import org.xtext.mgse.set.PACK;
import org.xtext.mgse.set.PACKTYPE;
import org.xtext.mgse.set.URL;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class SetGenerator extends AbstractGenerator {
  private String dw = "{\"tardis\",\"dalek\",\"cyberman\"}";
  
  private String got = "{\"stark\",\"lennister\",\"targaryen\"}";
  
  private String original = "{\"ovally\",\"wave\",\"balk\"}";
  
  private String path_dw = "\"/pack/dw/\"";
  
  private String path_got = "\"/pack/got/\"";
  
  private String path_original = "\"/pack/original/\"";
  
  private String url_gen;
  
  private String form_gen;
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _head = IterableExtensions.<EObject>head(resource.getContents());
    final PACK pack = ((PACK) _head);
    final PACKTYPE packtype = pack.getType();
    final FORMS form = packtype.getForms();
    final URL url = packtype.getUrl();
    boolean _equals = url.getType().toString().equals("URL_ORIGINAL");
    if (_equals) {
      this.url_gen = this.path_original;
    } else {
      boolean _equals_1 = url.getType().toString().equals("URL_GAMEOFTHRONES");
      if (_equals_1) {
        this.url_gen = this.path_got;
      } else {
        boolean _equals_2 = url.getType().toString().equals("URL_DOCTORWHO");
        if (_equals_2) {
          this.url_gen = this.path_dw;
        }
      }
    }
    boolean _equals_3 = form.getType().toString().equals("FORM_ORIGINAL");
    if (_equals_3) {
      this.form_gen = this.original;
    } else {
      boolean _equals_4 = form.getType().toString().equals("FORM_GAMEOFTHRONES");
      if (_equals_4) {
        this.form_gen = this.got;
      } else {
        boolean _equals_5 = form.getType().toString().equals("FORM_DOCTORWHO");
        if (_equals_5) {
          this.form_gen = this.dw;
        }
      }
    }
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.htwg.se.setgame.modell.impl;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import java.util.LinkedList;");
    _builder.newLine();
    _builder.append("import java.util.List;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import de.htwg.se.setgame.modell.ICard;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @author David & Sascha class use to create all the");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*         combinations of the pack");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("public class Pack{");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* Instance variable");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private ICard pack[] = creatCards();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private static String pack_url = ");
    _builder.append(this.url_gen, "\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("protected static String[] FORME = ");
    _builder.append(this.form_gen, "\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("protected static final String[] COLORS = { \"red\", \"green\", \"purple\" };");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected static final String[] FILL = { \"halffill\", \"fill\", \"empty\" };");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected static final int[] NUMBEROFCOMPONET = { 1, 2, 3 };");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private static final int SIZEOFARRAY = 81;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private static final int NUMBEROFEACHCARD = 3;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private int colorIndex = 0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private int formeIndex = 0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private int fillgingIndex = 0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private int numbersIdex = 0;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* Construct for card");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public Pack() {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @return the finish pack of the Game");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected Card[] creatCards() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Card list[] = new Card[SIZEOFARRAY];");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for (int i = 0; i < SIZEOFARRAY; i++) {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("list[i] = new Card(COLORS[colorIndex], FORME[formeIndex],");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("FILL[fillgingIndex], NUMBEROFCOMPONET[numbersIdex]);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("setFormedIndex();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return list;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getPackURL() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return pack_url;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static void setForm(String[] forms) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("FORME = forms;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static void setPackURL(String url) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("pack_url = url;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* set number of index form");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private void setFormedIndex() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("int t = this.formeIndex + 1;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (t == NUMBEROFEACHCARD) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("setFillIndex();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.formeIndex = 0;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.formeIndex = t;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* set index of the fill");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private void setFillIndex() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("int t = this.fillgingIndex + 1;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (t == NUMBEROFEACHCARD) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.fillgingIndex = 0;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("setComponentsOfIndex();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.fillgingIndex = t;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* set index of number of Components");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private void setComponentsOfIndex() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("int t = this.numbersIdex + 1;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (t == NUMBEROFEACHCARD) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.numbersIdex = 0;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("setColorIndex();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.numbersIdex = t;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* Set Color Index");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private void setColorIndex() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("int t = this.colorIndex + 1;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (t == NUMBEROFEACHCARD) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.colorIndex = 0;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.colorIndex = t;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @return pack of cards");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public List<ICard> getPack() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("List<ICard> liste = new LinkedList<ICard>();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for (ICard card : this.pack) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("liste.add(card);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return liste;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String[] getcolors() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return Pack.COLORS;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String[] getFormes() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return Pack.FORME;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String[] getFill() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return Pack.FILL;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    fsa.generateFile("Model/de.htwg.se.SetGame/src/de/htwg/se/setgame/modell/impl/Pack.java", _builder);
  }
}
