/*
 * generated by Xtext 2.11.0
 */
grammar InternalSet;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.mgse.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.mgse.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.mgse.services.SetGrammarAccess;

}
@parser::members {
	private SetGrammarAccess grammarAccess;

	public void setGrammarAccess(SetGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePACK
entryRulePACK
:
{ before(grammarAccess.getPACKRule()); }
	 rulePACK
{ after(grammarAccess.getPACKRule()); } 
	 EOF 
;

// Rule PACK
rulePACK 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPACKAccess().getGroup()); }
		(rule__PACK__Group__0)
		{ after(grammarAccess.getPACKAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePACKTYPE
entryRulePACKTYPE
:
{ before(grammarAccess.getPACKTYPERule()); }
	 rulePACKTYPE
{ after(grammarAccess.getPACKTYPERule()); } 
	 EOF 
;

// Rule PACKTYPE
rulePACKTYPE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPACKTYPEAccess().getGroup()); }
		(rule__PACKTYPE__Group__0)
		{ after(grammarAccess.getPACKTYPEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFORMS
entryRuleFORMS
:
{ before(grammarAccess.getFORMSRule()); }
	 ruleFORMS
{ after(grammarAccess.getFORMSRule()); } 
	 EOF 
;

// Rule FORMS
ruleFORMS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFORMSAccess().getGroup()); }
		(rule__FORMS__Group__0)
		{ after(grammarAccess.getFORMSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleURL
entryRuleURL
:
{ before(grammarAccess.getURLRule()); }
	 ruleURL
{ after(grammarAccess.getURLRule()); } 
	 EOF 
;

// Rule URL
ruleURL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getURLAccess().getGroup()); }
		(rule__URL__Group__0)
		{ after(grammarAccess.getURLAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TYPE_FORMS
ruleTYPE_FORMS
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTYPE_FORMSAccess().getAlternatives()); }
		(rule__TYPE_FORMS__Alternatives)
		{ after(grammarAccess.getTYPE_FORMSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule URL_TYPES
ruleURL_TYPES
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURL_TYPESAccess().getAlternatives()); }
		(rule__URL_TYPES__Alternatives)
		{ after(grammarAccess.getURL_TYPESAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TYPE_FORMS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTYPE_FORMSAccess().getFORM_ORIGINALEnumLiteralDeclaration_0()); }
		('FORM_ORIGINAL')
		{ after(grammarAccess.getTYPE_FORMSAccess().getFORM_ORIGINALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTYPE_FORMSAccess().getFORM_DOCTORWHOEnumLiteralDeclaration_1()); }
		('FORM_DOCTORWHO')
		{ after(grammarAccess.getTYPE_FORMSAccess().getFORM_DOCTORWHOEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTYPE_FORMSAccess().getFORM_GAMEOFTHRONESEnumLiteralDeclaration_2()); }
		('FORM_GAMEOFTHRONES')
		{ after(grammarAccess.getTYPE_FORMSAccess().getFORM_GAMEOFTHRONESEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URL_TYPES__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURL_TYPESAccess().getURL_ORIGINALEnumLiteralDeclaration_0()); }
		('URL_ORIGINAL')
		{ after(grammarAccess.getURL_TYPESAccess().getURL_ORIGINALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getURL_TYPESAccess().getURL_DOCTORWHOEnumLiteralDeclaration_1()); }
		('URL_DOCTORWHO')
		{ after(grammarAccess.getURL_TYPESAccess().getURL_DOCTORWHOEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getURL_TYPESAccess().getURL_GAMEOFTHRONESEnumLiteralDeclaration_2()); }
		('URL_GAMEOFTHRONES')
		{ after(grammarAccess.getURL_TYPESAccess().getURL_GAMEOFTHRONESEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PACK__Group__0__Impl
	rule__PACK__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPACKAccess().getPackKeyword_0()); }
	'pack'
	{ after(grammarAccess.getPACKAccess().getPackKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PACK__Group__1__Impl
	rule__PACK__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPACKAccess().getNameAssignment_1()); }
	(rule__PACK__NameAssignment_1)
	{ after(grammarAccess.getPACKAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PACK__Group__2__Impl
	rule__PACK__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPACKAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPACKAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PACK__Group__3__Impl
	rule__PACK__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPACKAccess().getTypeAssignment_3()); }
	(rule__PACK__TypeAssignment_3)
	{ after(grammarAccess.getPACKAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PACK__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPACKAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPACKAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PACKTYPE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PACKTYPE__Group__0__Impl
	rule__PACKTYPE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PACKTYPE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPACKTYPEAccess().getFormsAssignment_0()); }
	(rule__PACKTYPE__FormsAssignment_0)
	{ after(grammarAccess.getPACKTYPEAccess().getFormsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PACKTYPE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PACKTYPE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PACKTYPE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPACKTYPEAccess().getUrlAssignment_1()); }
	(rule__PACKTYPE__UrlAssignment_1)
	{ after(grammarAccess.getPACKTYPEAccess().getUrlAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FORMS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FORMS__Group__0__Impl
	rule__FORMS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FORMS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFORMSAccess().getNameAssignment_0()); }
	(rule__FORMS__NameAssignment_0)
	{ after(grammarAccess.getFORMSAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FORMS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FORMS__Group__1__Impl
	rule__FORMS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FORMS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFORMSAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getFORMSAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FORMS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FORMS__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FORMS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFORMSAccess().getTypeAssignment_2()); }
	(rule__FORMS__TypeAssignment_2)
	{ after(grammarAccess.getFORMSAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__URL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URL__Group__0__Impl
	rule__URL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__URL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURLAccess().getNameAssignment_0()); }
	(rule__URL__NameAssignment_0)
	{ after(grammarAccess.getURLAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URL__Group__1__Impl
	rule__URL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__URL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURLAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getURLAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__URL__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__URL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__URL__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getURLAccess().getTypeAssignment_2()); }
	(rule__URL__TypeAssignment_2)
	{ after(grammarAccess.getURLAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PACK__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPACKAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPACKAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PACK__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPACKAccess().getTypePACKTYPEParserRuleCall_3_0()); }
		rulePACKTYPE
		{ after(grammarAccess.getPACKAccess().getTypePACKTYPEParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PACKTYPE__FormsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPACKTYPEAccess().getFormsFORMSParserRuleCall_0_0()); }
		ruleFORMS
		{ after(grammarAccess.getPACKTYPEAccess().getFormsFORMSParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PACKTYPE__UrlAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPACKTYPEAccess().getUrlURLParserRuleCall_1_0()); }
		ruleURL
		{ after(grammarAccess.getPACKTYPEAccess().getUrlURLParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FORMS__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFORMSAccess().getNameFORMKeyword_0_0()); }
		(
			{ before(grammarAccess.getFORMSAccess().getNameFORMKeyword_0_0()); }
			'FORM'
			{ after(grammarAccess.getFORMSAccess().getNameFORMKeyword_0_0()); }
		)
		{ after(grammarAccess.getFORMSAccess().getNameFORMKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FORMS__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFORMSAccess().getTypeTYPE_FORMSEnumRuleCall_2_0()); }
		ruleTYPE_FORMS
		{ after(grammarAccess.getFORMSAccess().getTypeTYPE_FORMSEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URL__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURLAccess().getNameURLKeyword_0_0()); }
		(
			{ before(grammarAccess.getURLAccess().getNameURLKeyword_0_0()); }
			'URL'
			{ after(grammarAccess.getURLAccess().getNameURLKeyword_0_0()); }
		)
		{ after(grammarAccess.getURLAccess().getNameURLKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__URL__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getURLAccess().getTypeURL_TYPESEnumRuleCall_2_0()); }
		ruleURL_TYPES
		{ after(grammarAccess.getURLAccess().getTypeURL_TYPESEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
