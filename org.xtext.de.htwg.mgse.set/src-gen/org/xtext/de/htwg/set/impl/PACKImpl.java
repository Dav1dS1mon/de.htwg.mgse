/**
 * generated by Xtext 2.11.0
 */
package org.xtext.de.htwg.set.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.de.htwg.set.PACK;
import org.xtext.de.htwg.set.PACKTYPE;
import org.xtext.de.htwg.set.SetPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>PACK</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.de.htwg.set.impl.PACKImpl#getPack <em>Pack</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PACKImpl extends MinimalEObjectImpl.Container implements PACK
{
  /**
   * The cached value of the '{@link #getPack() <em>Pack</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPack()
   * @generated
   * @ordered
   */
  protected PACKTYPE pack;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PACKImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SetPackage.Literals.PACK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PACKTYPE getPack()
  {
    return pack;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPack(PACKTYPE newPack, NotificationChain msgs)
  {
    PACKTYPE oldPack = pack;
    pack = newPack;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SetPackage.PACK__PACK, oldPack, newPack);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPack(PACKTYPE newPack)
  {
    if (newPack != pack)
    {
      NotificationChain msgs = null;
      if (pack != null)
        msgs = ((InternalEObject)pack).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SetPackage.PACK__PACK, null, msgs);
      if (newPack != null)
        msgs = ((InternalEObject)newPack).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SetPackage.PACK__PACK, null, msgs);
      msgs = basicSetPack(newPack, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SetPackage.PACK__PACK, newPack, newPack));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SetPackage.PACK__PACK:
        return basicSetPack(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SetPackage.PACK__PACK:
        return getPack();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SetPackage.PACK__PACK:
        setPack((PACKTYPE)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SetPackage.PACK__PACK:
        setPack((PACKTYPE)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SetPackage.PACK__PACK:
        return pack != null;
    }
    return super.eIsSet(featureID);
  }

} //PACKImpl
